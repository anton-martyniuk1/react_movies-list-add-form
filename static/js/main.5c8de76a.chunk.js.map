{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","onBlur","NewMovie","state","count","changeValue","event","target","setState","newMovie","trim","onSubmit","preventDefault","props","onAdd","this","disabled","length","React","Component","App","moviesFromServer","addFilm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c8de76a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { ChangeEvent, useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { ChangeEvent, FormEvent } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  count: number,\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state = {\n    count: 0,\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  changeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  newMovie = () => {\n    return {\n      title: this.state.title.trim(),\n      description: this.state.description.trim(),\n      imgUrl: this.state.imgUrl.trim(),\n      imdbUrl: this.state.imdbUrl.trim(),\n      imdbId: this.state.imdbId.trim(),\n    };\n  };\n\n  onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.onAdd(this.newMovie());\n\n    this.setState(state => ({\n      count: state.count + 1,\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    }));\n  };\n\n  render(): React.ReactNode {\n    const {\n      count,\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        className=\"NewMovie\"\n        key={count}\n        onSubmit={this.onSubmit}\n      >\n        <h2 className=\"title\">Add a movie</h2>\n\n        <TextField\n          name=\"title\"\n          label=\"Title\"\n          value={title}\n          required\n          onChange={this.changeValue}\n        />\n\n        <TextField\n          name=\"description\"\n          label=\"Description\"\n          value={description}\n          onChange={this.changeValue}\n        />\n\n        <TextField\n          name=\"imgUrl\"\n          label=\"Image URL\"\n          value={imgUrl}\n          required\n          onChange={this.changeValue}\n        />\n\n        <TextField\n          name=\"imdbUrl\"\n          label=\"Imdb URL\"\n          value={imdbUrl}\n          required\n          onChange={this.changeValue}\n        />\n\n        <TextField\n          name=\"imdbId\"\n          label=\"Imdb ID\"\n          value={imdbId}\n          required\n          onChange={this.changeValue}\n        />\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              data-cy=\"submit-button\"\n              className=\"button is-link\"\n              disabled={(\n                !title.trim().length\n                || !imgUrl.trim().length\n                || !imdbUrl.trim().length\n                || !imdbId.trim().length\n              )}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\ntype State = {\n  movies: Movie[]\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addFilm = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addFilm} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}